generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  email          String   @unique
  name           String
  password       String
  tasksCreated   Task[]   @relation("CreatedTasks")
  tasksAssigned  Task[]   @relation("AssignedTasks")
  notifications  Notification[]
  auditLogs      AuditLog[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum Status {
  TODO
  IN_PROGRESS
  REVIEW
  COMPLETED
}

model Task {
  id            String     @id @default(cuid())
  title         String     @db.VarChar(100)
  description   String
  dueDate       DateTime
  priority      Priority   @default(MEDIUM)
  status        Status     @default(TODO)
  creatorId     String
  assignedToId  String?
  creator       User       @relation("CreatedTasks", fields: [creatorId], references: [id])
  assignee      User?      @relation("AssignedTasks", fields: [assignedToId], references: [id])
  auditLogs     AuditLog[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Notification {
  id        String   @id @default(cuid())
  userId    String
  type      String
  data      Json
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model AuditLog {
  id        String   @id @default(cuid())
  taskId    String
  userId    String
  field     String
  from      String?
  to        String?
  createdAt DateTime @default(now())
  task      Task     @relation(fields: [taskId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}
